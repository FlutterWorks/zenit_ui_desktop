/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface MyComponent {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
    interface ZenitButton {
        /**
          * Whether the button should not be clickable.
         */
        "disabled": boolean;
        /**
          * Whether to use primary styling for this button.
         */
        "primary": boolean;
    }
    interface ZenitCheckbox {
        /**
          * Whether the button should not be clickable.
         */
        "disabled": boolean;
        /**
          * Whether to allow "click" actions to switch to the intermediate/mixed state.
         */
        "tristate": boolean;
        /**
          * Whether the box is checked. If it has an indeterminate value, then use "mixed".
         */
        "value": "on" | "off" | "mixed";
    }
    interface ZenitSwitch {
        /**
          * Whether the switch is on (true) or off (false).
         */
        "checked": boolean;
        /**
          * Whether the button should not be clickable.
         */
        "disabled": boolean;
    }
}
declare global {
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLZenitButtonElement extends Components.ZenitButton, HTMLStencilElement {
    }
    var HTMLZenitButtonElement: {
        prototype: HTMLZenitButtonElement;
        new (): HTMLZenitButtonElement;
    };
    interface HTMLZenitCheckboxElement extends Components.ZenitCheckbox, HTMLStencilElement {
    }
    var HTMLZenitCheckboxElement: {
        prototype: HTMLZenitCheckboxElement;
        new (): HTMLZenitCheckboxElement;
    };
    interface HTMLZenitSwitchElement extends Components.ZenitSwitch, HTMLStencilElement {
    }
    var HTMLZenitSwitchElement: {
        prototype: HTMLZenitSwitchElement;
        new (): HTMLZenitSwitchElement;
    };
    interface HTMLElementTagNameMap {
        "my-component": HTMLMyComponentElement;
        "zenit-button": HTMLZenitButtonElement;
        "zenit-checkbox": HTMLZenitCheckboxElement;
        "zenit-switch": HTMLZenitSwitchElement;
    }
}
declare namespace LocalJSX {
    interface MyComponent {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface ZenitButton {
        /**
          * Whether the button should not be clickable.
         */
        "disabled"?: boolean;
        /**
          * Whether to use primary styling for this button.
         */
        "primary"?: boolean;
    }
    interface ZenitCheckbox {
        /**
          * Whether the button should not be clickable.
         */
        "disabled"?: boolean;
        /**
          * Whether to allow "click" actions to switch to the intermediate/mixed state.
         */
        "tristate"?: boolean;
        /**
          * Whether the box is checked. If it has an indeterminate value, then use "mixed".
         */
        "value"?: "on" | "off" | "mixed";
    }
    interface ZenitSwitch {
        /**
          * Whether the switch is on (true) or off (false).
         */
        "checked"?: boolean;
        /**
          * Whether the button should not be clickable.
         */
        "disabled"?: boolean;
    }
    interface IntrinsicElements {
        "my-component": MyComponent;
        "zenit-button": ZenitButton;
        "zenit-checkbox": ZenitCheckbox;
        "zenit-switch": ZenitSwitch;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
            "zenit-button": LocalJSX.ZenitButton & JSXBase.HTMLAttributes<HTMLZenitButtonElement>;
            "zenit-checkbox": LocalJSX.ZenitCheckbox & JSXBase.HTMLAttributes<HTMLZenitCheckboxElement>;
            "zenit-switch": LocalJSX.ZenitSwitch & JSXBase.HTMLAttributes<HTMLZenitSwitchElement>;
        }
    }
}
